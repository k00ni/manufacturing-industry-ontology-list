#!/usr/bin/env php
<?php

declare(strict_types=1);

use quickRdf\DataFactory;

require __DIR__.'/../src/bootstrap.php';

/**
 * This file extracts all available information about an ontology from a given file/URL.
 */

// ontology URI or RDF file URL
$ontologyURIOrRdfFileURL = (string) ($argv[1] ?? '');
if (false === str_starts_with($ontologyURIOrRdfFileURL, 'http')) {
    echo PHP_EOL.'Please provide an URI or link to an ontology'.PHP_EOL;
    return;
}

// RDF serialization
$format = (string) ($argv[2] ?? 'turtle');

// load RDF file content (its cached)
$data = getContentOfRdfFile($ontologyURIOrRdfFileURL);
if (str_contains($data, '404: Not Found')) {
    echo PHP_EOL;
    echo 'URL returned 404 error. Stopping here';
    echo PHP_EOL;
    return;
} elseif (null === guessFormat($data)) {
    echo PHP_EOL.'It is neither RDF/XML nor Turtle data > IGNORED';
    echo PHP_EOL;
    return;
}

$store = loadQuadsIntoInMemoryStore($ontologyURIOrRdfFileURL);

// generate CSV file line for given ontology
echo PHP_EOL;
echo PHP_EOL;
if (isOntologyIriAlreadyKnown($ontologyURIOrRdfFileURL)) {
    echo 'Ontology is already known ('.$ontologyURIOrRdfFileURL.')';
} else {
    echo getCSVLineForOntology($ontologyURIOrRdfFileURL, $store, $format);
}

// if there are owl:imports being used
$iris = array_merge(
    getNamespaceUriListUsedInRdfFile($data, $format),
    getOwlImportIris($store)
);

if (0 < count($iris)) {
    echo PHP_EOL;
    echo PHP_EOL;
    echo 'CSV file lines for UNKNOWN ontologies referend in owl:import statements:';
    echo PHP_EOL;

    $dataFactory = new DataFactory();

    foreach ($iris as $ontologyIri) {
        // if ontology IRI is unknown
        if (false === isOntologyIriAlreadyKnown($ontologyIri)) {
            $data = getContentOfRdfFile($ontologyIri);
            $format = guessFormat($data);
            if (null == $format) {
                echo PHP_EOL;
                echo $ontologyIri.' its neither RDF/XML nor Turtle > IGNORE';
                echo PHP_EOL;
                continue;
            }

            $store = loadQuadsIntoInMemoryStore($ontologyIri);

            echo PHP_EOL;
            echo getCSVLineForOntology($ontologyIri, $store, $format);
            echo PHP_EOL;
        }
    }
} else {
    echo PHP_EOL.'No owl:imports on ontology found.';
}

echo PHP_EOL;