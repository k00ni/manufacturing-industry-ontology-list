#!/usr/bin/env php
<?php

/**
 * This file generates config code for graph visualization on yuml.me.
 */

declare(strict_types=1);

require __DIR__.'/../src/bootstrap.php';

$fileContent = '';

echo 'TODO file';

/*
foreach ($simplifiedOntologyList as $iri => $entry) {
    if (true === $entry['ignore_it']) {
        // ignore this entry (for reasons look above)
        continue;
    } elseif (str_contains($entry['rdf_file'], 'Information not available')) {
        continue;
    } else {
        // download file and read content
        $rdfFileContent = getContentOfRdfFile($entry['rdf_file']);
    }

    // assume its RDF/Turtle
    if (
        str_contains($entry['rdf_file'], '.n3')
        || str_contains($entry['rdf_file'], '.ttl')
    ) {
        $type = 'turtle';
    } else {
        // XML file
        $type = 'rdf';
    }

    // go through the list of namespace IRIs and owl:imports
    $iris = array_merge(
        getNamespaceUriListUsedInRdfFile($rdfFileContent, $type),
        getOwlImportIris($entry['rdf_file'], $type)
    );

    foreach ($iris as $iri) {
        // get related ontology title
        if (isset($simplifiedOntologyList[$iri])) {
            // current ontology
            $from = strtolower($entry['key']);
            // referenced ontology
            $to = strtolower($simplifiedOntologyList[$iri]['key']);

            // add line to file content
            $fileContent .= '['.$from.']->['.$to.']'.PHP_EOL;
        } else {
            echo PHP_EOL.'In '. $entry['key'].' found unknown namespace IRI: '.$iri;
        }
    }

    if (0 == count($iris)) {
        throw new Exception($entry['key'].': No related namespaces found!');
    }
}

file_put_contents(__DIR__.'/../../yuml-diagram-config.txt', $fileContent);
*/

echo PHP_EOL;